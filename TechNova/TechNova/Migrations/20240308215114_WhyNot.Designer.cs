// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechNova.Data;

#nullable disable

namespace TechNova.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240308215114_WhyNot")]
    partial class WhyNot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 1
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 2
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 9
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 10
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 11
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 13
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 17
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 19
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 3
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 4
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 8
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 14
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 18
                        },
                        new
                        {
                            CategoriesId = 3,
                            ProductsId = 5
                        },
                        new
                        {
                            CategoriesId = 3,
                            ProductsId = 12
                        },
                        new
                        {
                            CategoriesId = 3,
                            ProductsId = 20
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 6
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 15
                        },
                        new
                        {
                            CategoriesId = 5,
                            ProductsId = 7
                        },
                        new
                        {
                            CategoriesId = 5,
                            ProductsId = 16
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("TechNova.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.CartProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<double>("DiscountPrice")
                        .HasColumnType("float");

                    b.Property<string>("ImgUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnSale")
                        .HasColumnType("bit");

                    b.Property<double>("OriginalPrice")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartProduct");
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Future Tech"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wearable Gadgets"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Smart Home Devices"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Virtual Reality"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Space Exploration Gear"
                        });
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OrderFormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("OrderFormId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.OrderFormModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCodeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderFormModel");
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("DiscountPrice")
                        .HasColumnType("float");

                    b.Property<string>("ImgUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnSale")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = 10.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/quantum_computer.jpg",
                            LongDescription = "Harness the power of quantum computing with our cutting-edge desktop model, designed for complex simulations and cryptography.",
                            OnSale = true,
                            Price = 50000.0,
                            Quantity = 25,
                            ShortDescription = "Next-gen quantum computing.",
                            Title = "Quantum Computer"
                        },
                        new
                        {
                            Id = 2,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/holographic_display.jpg",
                            LongDescription = "Experience immersive 3D projections in your living room with our high-definition holographic display system.",
                            OnSale = false,
                            Price = 15000.0,
                            Quantity = 40,
                            ShortDescription = "3D holographic projection.",
                            Title = "Holographic Display"
                        },
                        new
                        {
                            Id = 3,
                            Discount = 10.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/smart_fabric_suit.jpg",
                            LongDescription = "Stay comfortable in any climate with our smart fabric suit, featuring adaptive temperature control and health monitoring.",
                            OnSale = true,
                            Price = 8000.0,
                            Quantity = 70,
                            ShortDescription = "Adaptive temperature control suit.",
                            Title = "Smart Fabric Suit"
                        },
                        new
                        {
                            Id = 4,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/ar_glasses.jpg",
                            LongDescription = "See the world like never before with our augmented reality glasses, offering real-time information overlay and interactive experiences.",
                            OnSale = false,
                            Price = 7000.0,
                            Quantity = 85,
                            ShortDescription = "AR enhanced vision.",
                            Title = "Augmented Reality Glasses"
                        },
                        new
                        {
                            Id = 5,
                            Discount = 20.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/ai_personal_assistant.jpg",
                            LongDescription = "Meet your new best friend and assistant, powered by advanced AI to help manage your life and entertain you.",
                            OnSale = true,
                            Price = 10000.0,
                            Quantity = 50,
                            ShortDescription = "Your AI companion.",
                            Title = "AI Personal Assistant"
                        },
                        new
                        {
                            Id = 6,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/vr_gaming_set.jpg",
                            LongDescription = "Step into another world with our virtual reality gaming set, designed for unparalleled immersion and interaction.",
                            OnSale = false,
                            Price = 12000.0,
                            Quantity = 60,
                            ShortDescription = "Immersive gaming experience.",
                            Title = "Virtual Reality Gaming Set"
                        },
                        new
                        {
                            Id = 7,
                            Discount = 30.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/orbital_spacecraft.jpg",
                            LongDescription = "Explore the final frontier with your own orbital spacecraft, equipped with the latest in space travel technology.",
                            OnSale = true,
                            Price = 250000.0,
                            Quantity = 10,
                            ShortDescription = "Personal space exploration.",
                            Title = "Orbital Spacecraft Model"
                        },
                        new
                        {
                            Id = 8,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/bio_enhancement_chip.jpg",
                            LongDescription = "Upgrade your physical and cognitive abilities with our safe and reversible bio-enhancement chips.",
                            OnSale = false,
                            Price = 4000.0,
                            Quantity = 100,
                            ShortDescription = "Enhance your abilities.",
                            Title = "Bio-Enhancement Chip"
                        },
                        new
                        {
                            Id = 9,
                            Discount = 10.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/teleportation_device.jpg",
                            LongDescription = "Redefine the way you travel with our state-of-the-art teleportation device, offering instant transportation to preset locations.",
                            OnSale = true,
                            Price = 100000.0,
                            Quantity = 15,
                            ShortDescription = "Instant travel technology.",
                            Title = "Teleportation Device"
                        },
                        new
                        {
                            Id = 10,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/nano_repair_kit.jpg",
                            LongDescription = "Fix anything at a molecular level with our nano repair kit, from clothing to electronics, using advanced nanotechnology.",
                            OnSale = false,
                            Price = 5000.0,
                            Quantity = 80,
                            ShortDescription = "Self-repairing technology.",
                            Title = "Nano Repair Kit"
                        },
                        new
                        {
                            Id = 11,
                            Discount = 10.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/anti_gravity_skateboard.jpg",
                            LongDescription = "Glide through the air with our anti-gravity skateboard, offering a frictionless and exhilarating riding experience.",
                            OnSale = true,
                            Price = 20000.0,
                            Quantity = 40,
                            ShortDescription = "Levitating skateboarding experience.",
                            Title = "Anti-Gravity Skateboard"
                        },
                        new
                        {
                            Id = 12,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/smart_mirror.jpg",
                            LongDescription = "Transform your morning routine with our smart mirror, displaying news, weather, and personal health stats while you get ready.",
                            OnSale = false,
                            Price = 8000.0,
                            Quantity = 50,
                            ShortDescription = "Interactive home mirror.",
                            Title = "Smart Mirror"
                        },
                        new
                        {
                            Id = 13,
                            Discount = 20.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/portable_fusion_reactor.jpg",
                            LongDescription = "Power your home or spaceship with our portable fusion reactor, providing safe, clean, and limitless energy.",
                            OnSale = true,
                            Price = 150000.0,
                            Quantity = 20,
                            ShortDescription = "Unlimited clean energy.",
                            Title = "Portable Fusion Reactor"
                        },
                        new
                        {
                            Id = 14,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/self_cleaning_clothing.jpg",
                            LongDescription = "Never wash your clothes again with our self-cleaning clothing line, utilizing nanotechnology to repel dirt and odors.",
                            OnSale = false,
                            Price = 3000.0,
                            Quantity = 100,
                            ShortDescription = "Hygiene and convenience.",
                            Title = "Self-Cleaning Clothing"
                        },
                        new
                        {
                            Id = 15,
                            Discount = 20.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/mind_controlled_drones.jpg",
                            LongDescription = "Pilot drones with your mind using our cutting-edge neural interface, perfect for photography, racing, or surveillance.",
                            OnSale = true,
                            Price = 12000.0,
                            Quantity = 30,
                            ShortDescription = "Thought-driven drone technology.",
                            Title = "Mind-Controlled Drones"
                        },
                        new
                        {
                            Id = 16,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/underwater_habitat.jpg",
                            LongDescription = "Live or work under the sea with our underwater habitat module, equipped with life support and research facilities.",
                            OnSale = false,
                            Price = 250000.0,
                            Quantity = 5,
                            ShortDescription = "Explore oceanic depths.",
                            Title = "Underwater Habitat Module"
                        },
                        new
                        {
                            Id = 17,
                            Discount = 10.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/genetic_customization_kit.jpg",
                            LongDescription = "Design your future offspring or modify certain traits with our safe, ethical genetic customization kit.",
                            OnSale = true,
                            Price = 50000.0,
                            Quantity = 25,
                            ShortDescription = "Personalized genetic engineering.",
                            Title = "Genetic Customization Kit"
                        },
                        new
                        {
                            Id = 18,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/haptic_feedback_suit.jpg",
                            LongDescription = "Feel the virtual world with our haptic feedback suit, providing realistic sensations for gaming, training, or virtual travel.",
                            OnSale = false,
                            Price = 10000.0,
                            Quantity = 45,
                            ShortDescription = "Full-body immersive experience.",
                            Title = "Haptic Feedback Suit"
                        },
                        new
                        {
                            Id = 19,
                            Discount = 30.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/wireless_energy_transmitter.jpg",
                            LongDescription = "Power devices anywhere in your home without cables using our efficient and safe wireless energy transmitter.",
                            OnSale = true,
                            Price = 18000.0,
                            Quantity = 60,
                            ShortDescription = "Cordless power supply.",
                            Title = "Wireless Energy Transmitter"
                        },
                        new
                        {
                            Id = 20,
                            Discount = 0.0,
                            DiscountPrice = 0.0,
                            ImgUri = "./img/Products/ai_pet.jpg",
                            LongDescription = "Enjoy the companionship of a pet that learns and evolves with you, without any of the hassle, thanks to our AI technology.",
                            OnSale = false,
                            Price = 7000.0,
                            Quantity = 80,
                            ShortDescription = "The ultimate companion.",
                            Title = "Artificial Intelligence Pet"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("TechNova.Shared.Classes.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechNova.Shared.Classes.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("TechNova.Shared.Classes.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechNova.Shared.Classes.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechNova.Data.ApplicationUser", b =>
                {
                    b.HasOne("TechNova.Shared.Classes.Entities.Cart", "CurrentCart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentCart");
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.CartProduct", b =>
                {
                    b.HasOne("TechNova.Shared.Classes.Entities.Cart", null)
                        .WithMany("CartProducts")
                        .HasForeignKey("CartId");
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.Order", b =>
                {
                    b.HasOne("TechNova.Data.ApplicationUser", null)
                        .WithMany("Orders")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("TechNova.Shared.Classes.Entities.OrderFormModel", "OrderForm")
                        .WithMany()
                        .HasForeignKey("OrderFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderForm");
                });

            modelBuilder.Entity("TechNova.Data.ApplicationUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TechNova.Shared.Classes.Entities.Cart", b =>
                {
                    b.Navigation("CartProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
